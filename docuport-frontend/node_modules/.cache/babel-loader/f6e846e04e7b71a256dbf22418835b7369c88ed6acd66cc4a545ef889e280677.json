{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\docuport-git\\\\docuport-frontend\\\\src\\\\pages\\\\Upload.jsx\",\n  _s = $RefreshSig$();\n// Upload.jsx\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../api/axiosInstance';\nimport './Upload.css'; // Import styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [userId, setUserId] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file || !userId) {\n      alert(\"Please select a file and enter user ID.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('user_id', userId);\n    try {\n      await axios.post('/upload/', formData);\n      alert('Upload successful');\n      setUploadSuccess(true);\n    } catch (err) {\n      alert('Upload failed');\n    }\n  };\n  const goToDashboard = () => {\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"upload-title\",\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your user ID\",\n        className: \"upload-input\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"upload-input\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-button\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-success\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToDashboard,\n        className: \"dashboard-button\",\n        children: \"Go to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"l8ImzDroK1Jr82LWbvLPLgk9q8g=\", false, function () {\n  return [useNavigate];\n});\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","useNavigate","axios","jsxDEV","_jsxDEV","Upload","_s","file","setFile","userId","setUserId","uploadSuccess","setUploadSuccess","navigate","handleSubmit","e","preventDefault","alert","formData","FormData","append","post","err","goToDashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","files","onClick","_c","$RefreshReg$"],"sources":["D:/Web/docuport-git/docuport-frontend/src/pages/Upload.jsx"],"sourcesContent":["// Upload.jsx\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../api/axiosInstance';\r\nimport './Upload.css'; // Import styles\r\n\r\nexport default function Upload() {\r\n  const [file, setFile] = useState(null);\r\n  const [userId, setUserId] = useState('');\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file || !userId) {\r\n      alert(\"Please select a file and enter user ID.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('user_id', userId);\r\n\r\n    try {\r\n      await axios.post('/upload/', formData);\r\n      alert('Upload successful');\r\n      setUploadSuccess(true);\r\n    } catch (err) {\r\n      alert('Upload failed');\r\n    }\r\n  };\r\n\r\n  const goToDashboard = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h1 className=\"upload-title\">Upload File</h1>\r\n      <form onSubmit={handleSubmit} className=\"upload-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your user ID\"\r\n          className=\"upload-input\"\r\n          value={userId}\r\n          onChange={(e) => setUserId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          className=\"upload-input\"\r\n          onChange={(e) => setFile(e.target.files[0])}\r\n        />\r\n        <button type=\"submit\" className=\"upload-button\">\r\n          Upload\r\n        </button>\r\n      </form>\r\n\r\n      {uploadSuccess && (\r\n        <div className=\"upload-success\">\r\n          <button onClick={goToDashboard} className=\"dashboard-button\">\r\n            Go to Dashboard\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}